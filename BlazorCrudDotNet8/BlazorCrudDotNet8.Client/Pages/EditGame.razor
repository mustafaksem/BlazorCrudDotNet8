@page "/edit-game"
@page "/edit-game/{id:int}"
@inject IGameService GameService
@inject NavigationManager Navigation
@rendermode RenderMode.InteractiveAuto

@if (Id == null)
{
    <h3>Create Game</h3>
}
else
{
    <h3>Edit @game.Name</h3>
}

<EditForm Model="game" OnSubmit="HandleSubmit">
    <label>Name</label>
    <InputText @bind-Value="game.Name">@game.Name</InputText>
        <button type="submit" class="btn btn-primary">Submit</button>
        @if (Id != null)
    {
        <button @onclick="DeleteGame" type="button" class="btn btn-danger">Delete</button>
    }
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    Game game { get; set; } = new Game { Name = string.Empty };

    protected override async Task OnParametersSetAsync()
    {
        if (Id.HasValue)
        {
            game = await GameService.GetGameById(Id.Value);
        }
        else
        {
            game = new Game { Name = string.Empty }; // Yeni oyun oluştur
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await GameService.AddGame(game);
            Navigation.NavigateTo("/games"); // Oyun listesine yönlendir
        }
        else
        {
            await GameService.EditGame(Id.Value, game);
            Navigation.NavigateTo("/games"); // Oyun listesine yönlendir
        }
    }

    async Task DeleteGame()
    {
        if (Id.HasValue)
        {
            await GameService.DeleteGame(Id.Value);
            Navigation.NavigateTo("/games"); // Oyun listesine yönlendir
        }
    }
}
